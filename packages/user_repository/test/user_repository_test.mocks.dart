// Mocks generated by Mockito 5.4.4 from annotations
// in user_repository/test/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cache/cache.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferencesAsync_0 extends _i1.SmartFake
    implements _i2.SharedPreferencesAsync {
  _FakeSharedPreferencesAsync_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSecureStorageClient_1 extends _i1.SmartFake
    implements _i3.SecureStorageClient {
  _FakeSecureStorageClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CacheClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheClient extends _i1.Mock implements _i3.CacheClient {
  @override
  _i2.SharedPreferencesAsync get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue: _FakeSharedPreferencesAsync_0(
          this,
          Invocation.getter(#prefs),
        ),
        returnValueForMissingStub: _FakeSharedPreferencesAsync_0(
          this,
          Invocation.getter(#prefs),
        ),
      ) as _i2.SharedPreferencesAsync);

  @override
  _i3.SecureStorageClient get secure => (super.noSuchMethod(
        Invocation.getter(#secure),
        returnValue: _FakeSecureStorageClient_1(
          this,
          Invocation.getter(#secure),
        ),
        returnValueForMissingStub: _FakeSecureStorageClient_1(
          this,
          Invocation.getter(#secure),
        ),
      ) as _i3.SecureStorageClient);

  @override
  _i4.Future<void> writeBool({
    required String? key,
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeBool,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool?> readBool({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #readBool,
          [],
          {#key: key},
        ),
        returnValue: _i4.Future<bool?>.value(),
        returnValueForMissingStub: _i4.Future<bool?>.value(),
      ) as _i4.Future<bool?>);

  @override
  _i4.Future<void> writeInt({
    required String? key,
    required int? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeInt,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int?> readInt({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #readInt,
          [],
          {#key: key},
        ),
        returnValue: _i4.Future<int?>.value(),
        returnValueForMissingStub: _i4.Future<int?>.value(),
      ) as _i4.Future<int?>);

  @override
  _i4.Future<void> writeString({
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeString,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> writeObject({
    required String? key,
    required Map<String, dynamic>? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeObject,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?>? readString({required String? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readString,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<String?>?);

  @override
  _i4.Future<Map<String, dynamic>> readObject({required String? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readObject,
          [],
          {#key: key},
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<void> remove({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {#key: key},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> writeJwt({required String? value}) => (super.noSuchMethod(
        Invocation.method(
          #writeJwt,
          [],
          {#value: value},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> readJwt() => (super.noSuchMethod(
        Invocation.method(
          #readJwt,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> deleteJwt() => (super.noSuchMethod(
        Invocation.method(
          #deleteJwt,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
