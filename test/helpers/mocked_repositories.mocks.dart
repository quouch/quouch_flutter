// Mocks generated by Mockito 5.4.4 from annotations
// in quouch_app/test/helpers/mocked_repositories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:authentication_repository/src/authentication_repository.dart'
    as _i8;
import 'package:cache/cache.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:shared_preferences/shared_preferences.dart' as _i2;
import 'package:user_repository/src/models/models.dart' as _i4;
import 'package:user_repository/user_repository.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferencesAsync_0 extends _i1.SmartFake
    implements _i2.SharedPreferencesAsync {
  _FakeSharedPreferencesAsync_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCacheClient_1 extends _i1.SmartFake implements _i3.CacheClient {
  _FakeCacheClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i4.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamController_3<T> extends _i1.SmartFake
    implements _i5.StreamController<T> {
  _FakeStreamController_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CacheClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheClient extends _i1.Mock implements _i3.CacheClient {
  @override
  _i2.SharedPreferencesAsync get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue: _FakeSharedPreferencesAsync_0(
          this,
          Invocation.getter(#prefs),
        ),
        returnValueForMissingStub: _FakeSharedPreferencesAsync_0(
          this,
          Invocation.getter(#prefs),
        ),
      ) as _i2.SharedPreferencesAsync);

  @override
  _i5.Future<void> writeBool({
    required String? key,
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeBool,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool?> readBool({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #readBool,
          [],
          {#key: key},
        ),
        returnValue: _i5.Future<bool?>.value(),
        returnValueForMissingStub: _i5.Future<bool?>.value(),
      ) as _i5.Future<bool?>);

  @override
  _i5.Future<void> writeInt({
    required String? key,
    required int? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeInt,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int?> readInt({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #readInt,
          [],
          {#key: key},
        ),
        returnValue: _i5.Future<int?>.value(),
        returnValueForMissingStub: _i5.Future<int?>.value(),
      ) as _i5.Future<int?>);

  @override
  _i5.Future<void> writeString({
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeString,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> writeObject({
    required String? key,
    required Map<String, dynamic>? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeObject,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?>? readString({required String? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readString,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<String?>?);

  @override
  _i5.Future<Map<String, dynamic>> readObject({required String? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readObject,
          [],
          {#key: key},
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> remove({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [],
          {#key: key},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  @override
  String get apiBaseUrl => (super.noSuchMethod(
        Invocation.getter(#apiBaseUrl),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#apiBaseUrl),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#apiBaseUrl),
        ),
      ) as String);

  @override
  _i3.CacheClient get cache => (super.noSuchMethod(
        Invocation.getter(#cache),
        returnValue: _FakeCacheClient_1(
          this,
          Invocation.getter(#cache),
        ),
        returnValueForMissingStub: _FakeCacheClient_1(
          this,
          Invocation.getter(#cache),
        ),
      ) as _i3.CacheClient);

  @override
  _i5.Future<_i4.User> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _i5.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        )),
        returnValueForMissingStub: _i5.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        )),
      ) as _i5.Future<_i4.User>);

  @override
  _i5.Future<_i4.User?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i5.Future<_i4.User?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.User?>.value(),
      ) as _i5.Future<_i4.User?>);
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i8.AuthenticationRepository {
  @override
  _i3.CacheClient get cache => (super.noSuchMethod(
        Invocation.getter(#cache),
        returnValue: _FakeCacheClient_1(
          this,
          Invocation.getter(#cache),
        ),
        returnValueForMissingStub: _FakeCacheClient_1(
          this,
          Invocation.getter(#cache),
        ),
      ) as _i3.CacheClient);

  @override
  String get apiBaseUrl => (super.noSuchMethod(
        Invocation.getter(#apiBaseUrl),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#apiBaseUrl),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#apiBaseUrl),
        ),
      ) as String);

  @override
  bool get isWeb => (super.noSuchMethod(
        Invocation.getter(#isWeb),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isWeb(bool? _isWeb) => super.noSuchMethod(
        Invocation.setter(
          #isWeb,
          _isWeb,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.StreamController<_i8.AuthenticationStatus> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_3<_i8.AuthenticationStatus>(
          this,
          Invocation.getter(#controller),
        ),
        returnValueForMissingStub:
            _FakeStreamController_3<_i8.AuthenticationStatus>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i5.StreamController<_i8.AuthenticationStatus>);

  @override
  _i5.Future<_i4.User> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _i5.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        )),
        returnValueForMissingStub: _i5.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        )),
      ) as _i5.Future<_i4.User>);

  @override
  _i5.Stream<_i8.AuthenticationStatus> get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i5.Stream<_i8.AuthenticationStatus>.empty(),
        returnValueForMissingStub: _i5.Stream<_i8.AuthenticationStatus>.empty(),
      ) as _i5.Stream<_i8.AuthenticationStatus>);

  @override
  _i5.Future<void> logIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void logOut() => super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
